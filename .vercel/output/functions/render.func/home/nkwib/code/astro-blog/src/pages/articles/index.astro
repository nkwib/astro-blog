---
import MainLayout from "@/layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import ArticleCard from "@/components/ArticleCard.astro";
import { ARTICLES_PER_PAGE } from "@/constants";
import PaginationComponent from "@/components/PaginationComponent.astro";

const allBlogArticles: CollectionEntry<"blog">[] = (
  await getCollection("blog")
).sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const totalPages: number = Math.ceil(
  allBlogArticles.length / ARTICLES_PER_PAGE
);

const getCurrentPage = (): number => {
  const pageParam = Astro.url.searchParams.get("page");
  if (pageParam) {
    const page = parseInt(pageParam);
    if (page > 0 && page <= totalPages) {
      return page;
    }
  }
  Astro.url.href = `${Astro.url.origin}${Astro.url.pathname}?page=1`;
  return 1;
};

const currentPage: number | null = getCurrentPage();

const articlesForPage: CollectionEntry<"blog">[] = allBlogArticles.slice(
  (currentPage - 1) * ARTICLES_PER_PAGE,
  currentPage * ARTICLES_PER_PAGE
);
---
<MainLayout>
  <h1 class="text-2xl pb-3">All Articles</h1>
  <!-- Main Grid -->
  <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
    <!-- Article Card -->
    {articlesForPage.map((a) => <ArticleCard article={a} />)}
  </div>

  <!-- Pagination -->
  <PaginationComponent
    currentPage={currentPage}
    totalPages={totalPages}
    disablePrevious={currentPage === 1}
    disableNext={currentPage === totalPages}
  />
</MainLayout>
